# Configuración de Nginx para Sistema de Certificados DRTC Puno
# Ubicación: /etc/nginx/sites-available/certificates-drtc
# 
# Instrucciones de instalación:
# 1. Copiar este archivo a /etc/nginx/sites-available/certificates-drtc
# 2. Actualizar server_name con tu dominio
# 3. Crear enlace simbólico: sudo ln -s /etc/nginx/sites-available/certificates-drtc /etc/nginx/sites-enabled/
# 4. Obtener certificado SSL: sudo certbot --nginx -d certificados.drtcpuno.gob.pe
# 5. Probar configuración: sudo nginx -t
# 6. Recargar Nginx: sudo systemctl reload nginx

# Redirigir HTTP a HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name certificados.drtcpuno.gob.pe;
    
    # Redirigir todo el tráfico HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

# Configuración HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name certificados.drtcpuno.gob.pe;
    
    # Certificados SSL (Let's Encrypt)
    # Estos paths serán configurados automáticamente por certbot
    ssl_certificate /etc/letsencrypt/live/certificados.drtcpuno.gob.pe/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/certificados.drtcpuno.gob.pe/privkey.pem;
    
    # Configuración SSL moderna
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Headers de seguridad
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Tamaño máximo de archivos (para importación de Excel)
    client_max_body_size 10M;
    
    # Logs
    access_log /var/log/nginx/certificates-drtc-access.log;
    error_log /var/log/nginx/certificates-drtc-error.log;
    
    # Directorio raíz del proyecto
    root /var/www/certificates;
    
    # Servir archivos estáticos directamente
    location /static/ {
        alias /var/www/certificates/staticfiles/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Comprimir archivos estáticos
        gzip on;
        gzip_types text/css application/javascript image/svg+xml;
        gzip_vary on;
    }
    
    # Servir archivos media (certificados PDF, códigos QR)
    location /media/ {
        alias /var/www/certificates/media/;
        expires 7d;
        add_header Cache-Control "public";
        
        # Seguridad: solo permitir descarga de PDFs e imágenes
        location ~* \.(pdf|png|jpg|jpeg)$ {
            add_header Content-Disposition "attachment";
        }
    }
    
    # Proxy para la aplicación Django (Gunicorn)
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Proteger archivos sensibles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Bloquear acceso a archivos de configuración
    location ~* \.(env|ini|conf|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Configuración adicional para rate limiting (opcional)
# Descomentar si se necesita rate limiting a nivel de Nginx
# limit_req_zone $binary_remote_addr zone=certificates_limit:10m rate=10r/m;
# 
# Luego agregar en el bloque location /:
# limit_req zone=certificates_limit burst=5 nodelay;
